<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.collection.dao.IAppUserCenterMapper">

	<select id="getMyCenter" parameterType="map" resultType="map">
	    select us.userid,us.password,us.phone,us.nickname,us.status,us.delflag,us.headimage,DATE_FORMAT(us.updatetime,'%Y-%m-%d %H:%i:%S') as updatetime,
	    DATE_FORMAT(us.createtime,'%Y-%m-%d %H:%i:%S') as createtime,
	    us.xgocoin,
	    us.sumprofit,
	    us.sumassets,
	    us.growthvalue,
	    us.isrealname,ml.levelname, ml.levelenum,(ml.levelenum+1) as nextlevelnum,ml.mingrowthvalue,ml.maxgrowthvalue,ml.interesttimes,(maxgrowthvalue - growthvalue+1) as needgrowthvalue
	    from  c_t_app_userinfo us
		left join c_t_app_memberlevel ml on us.levelid = ml.levelid
	    <where>
	        <if test="phone != null and phone != ''">and us.phone=#{phone}</if>
	        <if test="nickname != null and nickname != ''">and us.nickname=#{nickname}</if>
	        <if test="password != null and password != ''">and us.password=#{password}</if>
	        <if test="userid != null and userid != ''"> and us.userid = #{userid}</if>
	        and us.delflag=0
	    </where>
	    limit 1
	</select>
	
	<update id="signIn" parameterType="map">
		update c_t_app_userinfo 
		set xgocoin = xgocoin + 1,
			growthvalue = growthvalue + #{growthvalue}
		where userid = #{userid}
	</update>
	
	<select id="getSignTodays" parameterType="map" resultType="map">
		select signid, userid, growthvalue, xgocoin,createtime  from c_t_app_sign 
		where userid = #{userid}
		and to_days(createtime) = to_days(now())
	</select>
	
	
	<update id="updateUserInfoLevel" parameterType="map">
		update c_t_app_userinfo 
		set levelid = #{levelid}
		where userid = #{userid}
	</update>
	
	<select id="getUserNewOldLevel" parameterType="map" resultType="map">
		SELECT ml.levelid, us.levelid as oldlevelid, ml.levelname, us.userid, us.phone
		FROM c_t_app_userinfo us 
		left JOIN c_t_app_memberlevel ml ON 
		 ml.mingrowthvalue &lt;= us.growthvalue
		AND ml.maxgrowthvalue &gt; us.growthvalue
		where us.userid = #{userid}
		LIMIT 1 
	</select>
	
	<select id="myGrowthValue" parameterType="map" resultType="map">
		select us.growthvalue,ml.levelname,ml.levelenum, (ml.levelenum+1) as nextlevelnum,ml.mingrowthvalue,ml.maxgrowthvalue,ml.interesttimes,(maxgrowthvalue - growthvalue+1) as needgrowthvalue
		from c_t_app_userinfo us 
		left join c_t_app_memberlevel ml on us.levelid = ml.levelid
		 where userid = #{userid}
	</select>
	<select id="getMemberGrowList" parameterType="map" resultType="map">
		select ml.levelid,ml.levelname,ml.levelenum,ml.mingrowthvalue,ml.maxgrowthvalue,ml.interesttimes,DATE_FORMAT(ml.updatetime,'%Y-%m-%d %H:%i:%S') as updatetime from
		c_t_app_memberlevel ml
	</select>
	
	<update id="deleteCertification" parameterType="map">
		update c_t_app_certification
		set delflag = 1
		<where>
	        <if test="certificationid != null and certificationid != ''">and certificationid=#{certificationid}</if>
	        <if test="userid != null and userid != ''"> and userid = #{userid}</if>
	        and delflag=0
	    </where>
	</update>
	
	<update id="updateUserCertification" parameterType="map">
		update c_t_app_userinfo
		set isrealname = #{status}
		where userid = #{userid}
	</update>
	
	<insert id="certification" parameterType="map">
		insert into c_t_app_certification
		 <trim prefix="(" suffix=")" suffixOverrides=",">
	        <if test="userid != null and userid != ''">userid,</if>
	        <if test="nationality != null and nationality != ''">nationality,</if>
	        <if test="realname != null and realname != ''">realname,</if>
	        <if test="idcard != null and idcard != ''">idcard,</if>
	        <if test="status != null and status != ''">status,</if>
	        <if test="createtime != null and createtime != ''">createtime,</if>
	    </trim>
	    <trim prefix="values(" suffix=")" suffixOverrides=",">
	    	<if test="userid != null and userid != ''">#{userid},</if>
	        <if test="nationality != null and nationality != ''">#{nationality},</if>
	        <if test="realname != null and realname != ''">#{realname},</if>
	        <if test="idcard != null and idcard != ''">#{idcard},</if>
	        <if test="status != null and status != ''">#{status},</if>
	        <if test="createtime != null and createtime != ''">#{createtime},</if>
	    </trim>
	</insert>
	
	<insert id="insertSign" parameterType="map">
		insert into c_t_app_sign
		 <trim prefix="(" suffix=")" suffixOverrides=",">
	        <if test="userid != null and userid != ''">userid,</if>
	        <if test="growthvalue != null and growthvalue != ''">growthvalue,</if>
	        <if test="xgocoin != null and xgocoin != ''">xgocoin,</if>
	        <if test="createtime != null and createtime != ''">createtime,</if>
	    </trim>
	    <trim prefix="values(" suffix=")" suffixOverrides=",">
	    	<if test="userid != null and userid != ''">#{userid},</if>
	        <if test="growthvalue != null and growthvalue != ''">#{growthvalue},</if>
	        <if test="xgocoin != null and xgocoin != ''">#{xgocoin},</if>
	        <if test="createtime != null and createtime != ''">#{createtime},</if>
	    </trim>
	</insert>
	
	<select id="getCertification" parameterType="map" resultType="map">
		select certificationid,nationality,realname,idcard,status,message,DATE_FORMAT(createtime,'%Y-%m-%d %H:%i:%S') as createtime
		from c_t_app_certification 
		where userid = #{userid}
		and delflag = 0
		order by createtime desc 
		limit 1
	</select>
	
	<select id="getSonProfit" parameterType="map" resultType="map">
		select userid,nickname,headimage,sum(parentprofit) as sumprofit from (
		select us.userid,us.nickname,us.headimage,IFNULL(te.parentprofit,0) as parentprofit
		from c_t_app_userinfo us
		left join c_t_app_teamprofit te on te.userid = us.userid
		where us.parentid = #{userid}
		) A group by userid,nickname,headimage
		order by A.parentprofit desc
	</select>
	
	<select id="getGrandSonProfit" parameterType="map" resultType="map">
		select userid,nickname,headimage,sum(grandfatherprofit) as sumprofit from (
			select us.userid,us.nickname,us.headimage,IFNULL(te.grandfatherprofit ,0) as grandfatherprofit
				from c_t_app_userinfo us
				inner join c_t_app_userinfo usp on us.parentid = usp.userid and usp.parentid = #{grandid}
				left join c_t_app_teamprofit te on te.userid = us.userid 
				where us.parentid  = #{userid}
			) A group by userid,nickname,headimage
			order by A.grandfatherprofit desc
	</select>
	
	<select id="myAssets" parameterType="map" resultType="map">
		select (select round(IFNULL(sum(cardprice),0), 2) from c_t_app_order where buyuserid =#{userid} and status &gt; 1) as allorder,
		(select round(IFNULL(sum(cardprice), 0), 2) from c_t_app_order where buyuserid = #{userid} and status in (3, 4)) as buyorder,
		round(sumassets, 2) as sumassets,round(sumprofit, 2) as sumprofit,
		(select IFNULL(SUM(ROUND(ao.profitprice/mc.commentstartdays,2)),0)
			from c_t_app_order ao 
		  left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.buyuserid = #{userid}
			and ao.status = 3) as yesterdayprofit,ml.interesttimes
		from c_t_app_userinfo us 
		left join c_t_app_memberlevel ml 
		on us.levelid = ml.levelid  
		where userid = #{userid}
	</select>
	
	<select id="getExchangeList" parameterType="map" resultType="map">
		select ao.ordernum, ao.orderid,ao.cardid,ao.buyuserid, ao.selluserid,ao.commentcount,ao.status,ao.ordertype,ao.profitprice,ao.cardprice,
			mc.typename,	
			mc.yield
			from c_t_app_exchange ex
			left join c_t_app_order ao on ex.orderid = ao.orderid
			left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.selluserid = #{userid}
			and ex.userid = #{userid}
			and ordertype = 2
	</select>
	
	<insert id="insertExchange" parameterType="map">
		insert into c_t_app_exchange(userid,amount,ordernum,createtime)
		values (#{userid}, #{amount}, #{ordernum}, now())
	</insert>
	
	<select id="myInviteCode" parameterType="map" resultType="map">
		select userid,invitecode,invitecodehttpurl,invitecodeqrcode, qrcode from c_t_app_userinfo where userid = #{userid}
	</select>
	
	<update id="updateQrcode" parameterType="map">
		update c_t_app_userinfo 
		set invitecodeqrcode = #{invitecodeqrcode}, qrcode = #{qrcode}
		where userid = #{userid}
	</update>
	
	<select id="getMyUserInfo" parameterType="map" resultType="map">
		select userid,password,phone,nickname,status,delflag,headimage,isrealname,xgocoin,agreementstatus,
			case when ISNULL(paypassword) = 1 then 0 else 1 end as ispaypass,
	    (select count(0) from c_t_app_paymentmethod where userid = #{userid} and (weixinqrcode is not null or alipayqrcode is not null or banknum is not null)) ispaymentmethod
	    from  c_t_app_userinfo 
	    <where>
	    	<if test="userid != null and userid != ''">and userid=#{userid}</if>
	    	<if test="oldpassword != null and oldpassword != ''">and password=#{oldpassword}</if>
	    </where>
	</select>
	
	<update id="updateUserInfo" parameterType="map">
		update c_t_app_userinfo
		<set>
	      <if test="phone != null">phone = #{phone},</if>
	      <if test="paypassword != null">paypassword = #{paypassword},</if>
	      <if test="newpassword != null and newpassword != ''">password = #{newpassword},</if>
	      <if test="nickname != null">nickname = #{nickname},</if>
	      <if test="headimage != null">headimage = #{headimage},</if>
	      <if test="status != null and status != ''">status = #{status},</if>
	      <if test="delflag != null and delflag != ''">delflag = #{delflag},</if>
	      <if test="levelid != null and levelid != ''">levelid = #{levelid},</if>
	      <if test="isrealname != null">isrealname = #{isrealname},</if>
	      <if test="agreementstatus != null">agreementstatus = #{agreementstatus},</if>
	   </set>
	   <where>
	       <if test="userid != null and userid != ''">and userid=#{userid}</if>
	   </where>
	</update>
	
	<select id="getPaymentMethod" parameterType="map" resultType="map">
		select paymentmethodid,userid,weixinnum,weixinqrcode,weixinrealname,alipaynum,alipayqrcode,alipayrealname,bank,banknum,bankrealname
		from c_t_app_paymentmethod 
		where userid = #{userid}
	</select>
	
	<insert id="addPaymentMethod" parameterType="map">
		insert into c_t_app_paymentmethod
		<trim prefix="(" suffix=")" suffixOverrides=",">
	        <if test="userid != null and userid != ''">userid,</if>
	        <if test="weixinnum != null and weixinnum != ''">weixinnum,</if>
	        <if test="weixinqrcode != null and weixinqrcode != ''">weixinqrcode,</if>
	        <if test="weixinrealname != null">weixinrealname,</if>
	        <if test="alipaynum != null">alipaynum,</if>
	        <if test="alipayqrcode != null and alipayqrcode != ''">alipayqrcode,</if>
	        <if test="alipayrealname != null">alipayrealname,</if>
	        <if test="bank != null and bank !=''">bank,</if>
	        <if test="banknum != null and banknum !=''">banknum,</if>
	        <if test="bankrealname != null and bankrealname !=''">bankrealname,</if>
	        createtime
	    </trim>
	    <trim prefix="values(" suffix=")" suffixOverrides=",">
	        <if test="userid != null and userid != ''">#{userid},</if>
	        <if test="weixinnum != null and weixinnum != ''">#{weixinnum},</if>
	        <if test="weixinqrcode != null and weixinqrcode != ''">#{weixinqrcode},</if>
	        <if test="weixinrealname != null">#{weixinrealname},</if>
	        <if test="alipaynum != null">#{alipaynum},</if>
	        <if test="alipayqrcode != null and alipayqrcode != ''">#{alipayqrcode},</if>
	        <if test="alipayrealname != null">#{alipayrealname},</if>
	        <if test="bank != null and bank !=''">#{bank},</if>
	        <if test="banknum != null and banknum !=''">#{banknum},</if>
	        <if test="bankrealname != null and bankrealname !=''">#{bankrealname},</if>
	        now()
	    </trim>
	</insert>
	
	<update id="updatePaymentMethod" parameterType="map">
		update c_t_app_paymentmethod
		<set>
	      	<if test="weixinnum != null and weixinnum != ''">weixinnum = #{weixinnum},</if>
	      	<if test="weixinqrcode != null and weixinqrcode != ''">weixinqrcode = #{weixinqrcode},</if>
	      	<if test="weixinrealname != null and weixinrealname != ''">weixinrealname = #{weixinrealname},</if>
	      	<if test="alipaynum != null and alipaynum != ''">alipaynum = #{alipaynum},</if>
	      	<if test="alipayqrcode != null and alipayqrcode != ''">alipayqrcode = #{alipayqrcode},</if>
	      	<if test="alipayrealname != null and alipayrealname != ''">alipayrealname = #{alipayrealname},</if>
	      	<if test="bank != null and bank != ''">bank = #{bank},</if>
	      	<if test="banknum != null and banknum != ''">banknum = #{banknum},</if>
	      	<if test="bankrealname != null and bankrealname != ''">bankrealname = #{bankrealname},</if>
		</set>
		<where>
			<if test="userid != null and userid != ''">and userid=#{userid}</if>
			<if test="paymentmethodid != null and paymentmethodid != ''">and paymentmethodid=#{paymentmethodid}</if>
		</where> 
	</update>
	
	<select id="getMyQuestion" parameterType="map" resultType="map">
		select questioncontent,replycontent,DATE_FORMAT(updatetime,'%Y-%m-%d %H:%i:%S') as updatetime,DATE_FORMAT(createtime,'%Y-%m-%d %H:%i:%S') as createtime 
		from c_t_app_question
		where userid = #{userid}
		order by createtime desc
	</select>
	
	<insert id="addMyQuestion" parameterType="map">
		insert into c_t_app_question
		<trim prefix="(" suffix=")" suffixOverrides=",">
	        <if test="userid != null and userid != ''">userid,</if>
	        <if test="questioncontent != null and questioncontent != ''">questioncontent,</if>
	        <if test="qtype != null and qtype != ''">qtype,</if>
	        <if test="createtime != null and createtime != ''">createtime,</if>
	    </trim>
	    <trim prefix="values(" suffix=")" suffixOverrides=",">
	        <if test="userid != null and userid != ''">#{userid},</if>
	        <if test="questioncontent != null and questioncontent != ''">#{questioncontent},</if>
	        <if test="qtype != null and qtype != ''">#{qtype},</if>
	        <if test="createtime != null and createtime != ''">#{createtime},</if>
	    </trim>
	</insert>
	
	<select id="getUserNotice" parameterType="map" resultType="map">
		select noticeid,title, message,status,DATE_FORMAT(createtime,'%Y-%m-%d %H:%i:%S') as createtime,userid
    	from c_t_usernotice 
    	<where>
    		<if test="userid != null and userid != ''">and userid=#{userid}</if>
    		<if test="status != null and status != ''">and status=#{status}</if>
    	</where>
		order by createtime desc  
		<!-- <if test="startnum != null and rownum != null">limit #{startnum},#{rownum}</if> -->
	</select>
	
	<select id="getUserNoticeCount" parameterType="map" resultType="int">
		select count(0)
    	from c_t_usernotice 
    	<where>
    		<if test="userid != null and userid != ''">and userid=#{userid}</if>
    		<if test="status != null and status != ''">and status=#{status}</if>
    	</where>
	</select>
	
	
	<select id="getNoticeUnreadNum" parameterType="map" resultType="map">
		select count(0) as count
    	from c_t_usernotice 
    	where userid =#{userid}
    	and status = 0
	</select>
	
	<insert id="addXgoRecord" parameterType="map">
		insert into c_t_app_xgorecord(userid,xgocoin,type,remark,createtime)
		values(#{userid}, #{xgocoin}, #{type}, #{remark}, #{createtime})
	</insert>
	
	<update id="updateNoticeStatus" parameterType="map">
		 update c_t_usernotice
		 set status = #{status}
		 <where>
		 	<if test="userid != null and userid != ''">and userid=#{userid}</if>
		 	<if test="noticeid != null and noticeid != ''">and noticeid=#{noticeid}</if>
		 </where>
	</update>
	
	<select id="getXgoRecord" parameterType="map" resultType="map">
		select xgorecordid,userid, xgocoin,type,remark, DATE_FORMAT(createtime,'%Y-%m-%d %H:%i:%S') as createtime
    	from c_t_app_xgorecord 
    	where userid =#{userid}
		order by createtime desc
	</select>
	
	<update id="reduceUserXgo" parameterType="map">
		update c_t_app_userinfo
		set xgocoin = xgocoin - #{xgocoin}
		where userid = #{userid}
	</update>
	
	<update id="addUserXgo" parameterType="map">
		update c_t_app_userinfo
		set xgocoin = xgocoin + #{xgocoin}
		where userid = #{userid}
	</update>
	
	<select id="getRank" parameterType="map" resultType="map" >
		select userid,nickname,headimage,sumassets,(@curRank := @curRank + 1) AS ranknum
		 from c_t_app_userinfo p,(select @curRank := 0) q
		where delflag = 0
		and isadmin = 0
		order by sumassets desc 
	</select>
	
	<select id="getEffectiveUserCount" parameterType="map" resultType="map" >
		select (select count(0) from c_t_app_userinfo where parentid =#{userid}) alluser,
		(select count(0) from c_t_app_userinfo where parentid =#{userid} and levelid > 1) effectuser
		from dual
	</select>
	
	<select id="getAddressList" parameterType="map" resultType="map" >
		select addressid,name,phone,province,city,county,town,address,isdefault from c_t_app_address
		<where>
		 	<if test="userid != null and userid != ''">and userid=#{userid}</if>
		 	<if test="isdefault != null and isdefault != ''">and isdefault=#{isdefault}</if>
		 </where>
		order by isdefault desc, createtime desc
	</select>
	
	<insert id="insertAddress" parameterType="map" >
		insert into c_t_app_address
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null and userid != ''">userid,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="phone != null and phone != ''">phone,</if>
            <if test="province != null and province != ''">province,</if>
            <if test="city != null and city != ''">city,</if>
            <if test="county != null and county != ''">county	,</if>
            <if test="createtime != null and createtime != ''">createtime,</if>
            <if test="town != null and town != ''">town,</if>
            <if test="address != null and address != ''">address,</if>
            <if test="isdefault != null and isdefault != ''">isdefault,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null and userid != ''">#{userid},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="phone != null and phone != ''">#{phone},</if>
            <if test="province != null and province != ''">#{province},</if>
            <if test="city != null and city != ''">#{city},</if>
            <if test="county != null and county != ''">#{county},</if>
            <if test="createtime != null and createtime != ''">#{createtime},</if>
            <if test="town != null and town != ''">#{town},</if>
            <if test="address != null and address != ''">#{address},</if>
            <if test="isdefault != null and isdefault != ''">#{isdefault},</if>
        </trim>
	</insert>
	
	<update id="updateAddress" parameterType="map" >
		update c_t_app_address
    	<set>
            <if test="name != null and name != ''">name=#{name},</if>
            <if test="phone != null and phone != ''">phone=#{phone},</if>
            <if test="province != null and province != ''">province=#{province},</if>
            <if test="city != null and city != ''">city=#{city},</if>
            <if test="county != null and county != ''">county=#{county},</if>
            <if test="updatetime != null and updatetime != ''">updatetime=#{updatetime},</if>
            <if test="town != null and town != ''">town=#{town},</if>
            <if test="address != null and address != ''">address=#{address},</if>
            <if test="isdefault != null and isdefault != ''">isdefault=#{isdefault},</if>
        </set>
        <where>
		 	<if test="userid != null and userid != ''">and userid=#{userid}</if>
		 	<if test="addressid != null and addressid != ''">and addressid=#{addressid}</if>
		 </where>
	</update>
	
	<delete id="deleteAddress" parameterType="map">
		delete from c_t_app_address where addressid=#{addressid}
	</delete>
</mapper>