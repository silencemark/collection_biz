<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.collection.dao.IAppVipCardMapper">

	<select id="getVipCardList" resultType="map" parameterType="map">
		select * from (SELECT
				cardid,
				typename,
				cardicon,
				minprice,
				maxprice,
				xgocoin,
				starttime,
				endtime,
				commentstartdays,
				watchdays,
				commentcount,
				yield,
				forder,
				DATE_FORMAT(createtime,'%Y-%m-%d %H:%i:%S') as createtime,
				createid,
				DATE_FORMAT(updatetime,'%Y-%m-%d %H:%i:%S') as updatetime,
				updateid,
				case when STR_TO_DATE(CONCAT(DATE_FORMAT(now(),'%Y-%m-%d '),starttime),'%Y-%m-%d %H:%i') &lt;= now() AND
									STR_TO_DATE(CONCAT(DATE_FORMAT(now(),'%Y-%m-%d '),endtime),'%Y-%m-%d %H:%i') &gt; now()
						THEN  1
						ELSE  0
				END as isbuy,
				timestampdiff(SECOND,now(),STR_TO_DATE(CONCAT(DATE_FORMAT(now(),'%Y-%m-%d '),starttime),'%Y-%m-%d %H:%i')) as secondbuy
			FROM
				c_t_app_membercard) A
			order by isbuy, forder
	</select>
	
	<select id="getWaitPayCard" parameterType="map" resultType="map">
		select ao.ordernum, ao.orderid,ao.cardid,ao.buyuserid, ao.selluserid,ao.commentcount,ao.status,ao.ordertype,ao.profitprice,ao.cardprice,
			timestampdiff(SECOND,now(),date_add(ao.createtime, interval 1 hour)) as remaintime,
			DATE_FORMAT(ao.buytime,'%Y-%m-%d %H:%i:%s') as buytime,
			DATE_FORMAT(ao.duetime,'%Y-%m-%d %H:%i:%s') as duetime,
			mc.typename,
			(mc.commentcount - ao.commentcount) remaincount,
			mc.yield
			 from c_t_app_order ao
			left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.createtime  &gt; date_add(now(), interval -1 hour) 
			and ao.status = 1
			and ao.buyuserid = #{userid}
		union 
		select ao.ordernum, ao.orderid,ao.cardid,ao.buyuserid, ao.selluserid,ao.commentcount,ao.status,ao.ordertype,ao.profitprice,ao.cardprice,
			timestampdiff(SECOND,now(),date_add(buytime, interval 1 hour)) as remaintime,
			DATE_FORMAT(ao.buytime,'%Y-%m-%d %H:%i:%s') as buytime,
			DATE_FORMAT(ao.duetime,'%Y-%m-%d %H:%i:%s') as duetime,
			mc.typename,
			(mc.commentcount - ao.commentcount) remaincount,
			mc.yield
			 from c_t_app_order ao
			left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.buytime  &gt; date_add(now(), interval -1 hour) 
			and ao.status = 2
			and ao.buyuserid = #{userid}
		union 
		select ao.ordernum, ao.orderid,ao.cardid,ao.buyuserid, ao.selluserid,ao.commentcount,ao.status,ao.ordertype,ao.profitprice,ao.cardprice,
			0,
			DATE_FORMAT(ao.buytime,'%Y-%m-%d %H:%i:%s') as buytime,
			DATE_FORMAT(ao.duetime,'%Y-%m-%d %H:%i:%s') as duetime,
			mc.typename,
			(mc.commentcount - ao.commentcount) remaincount,
			mc.yield
			 from c_t_app_order ao
			left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.status = 4
			and ao.buyuserid = #{userid}
	</select>
	
	<select id="getPayVipCardInfo" parameterType="map" resultType="map">
		select ao.orderid, mc.cardimg, mc.introduction, mc.description, ao.ordernum,
		DATE_FORMAT(ao.createtime,'%Y-%m-%d %H:%i:%S') as buytime, ao.cardprice,us.xgocoin,
		pay.weixinnum,pay.weixinqrcode,pay.weixinrealname,pay.alipaynum,pay.alipayqrcode,pay.alipayrealname,pay.bank,pay.banknum,pay.bankrealname
		from c_t_app_order  ao
		left join c_t_app_membercard mc on ao.cardid = mc.cardid
		left join c_t_app_userinfo us on ao.buyuserid = us.userid
		left join c_t_app_paymentmethod pay on ao.selluserid = pay.userid
		where ao.orderid=#{orderid} and ao.status = 1
	</select>
	
	<update id="payVipCard" parameterType="map">
		update c_t_app_order
		<set>
	      <if test="status != null">status = #{status},</if>
	      <if test="payorder != null">payorder = #{payorder},</if>
	   </set>
	   where orderid = #{orderid}
	</update>
	
	<select id="getContactPhone" parameterType="map" resultType="map">
		SELECT
			ce.realname,
			us.phone,
			pm.weixinnum
		FROM
			c_t_app_userinfo us
		LEFT JOIN c_t_app_certification ce ON ce.userid = us.userid
		AND ce. STATUS = 1
		LEFT JOIN c_t_app_paymentmethod pm ON ce.userid = pm.userid
		WHERE
			us.userid = #{userid}
		LIMIT 1
	</select>
	
	<select id="getSaleCardList" parameterType="map" resultType="map">
		select ao.ordernum, ao.orderid,ao.cardid,ao.buyuserid, ao.selluserid,ao.commentcount,ao.status,ao.ordertype,ao.profitprice,ao.cardprice,
			timestampdiff(SECOND,now(),date_add(ao.createtime, interval 1 hour)) as remaintime,
			DATE_FORMAT(ao.buytime,'%Y-%m-%d %H:%i:%s') as buytime,
			DATE_FORMAT(ao.duetime,'%Y-%m-%d %H:%i:%s') as duetime,
			mc.typename,
			(mc.commentcount - ao.commentcount) remaincount,
			mc.yield
			 from c_t_app_order ao
			left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.createtime  &gt; date_add(now(), interval -1 hour) 
			and ao.status = 1
			and ao.selluserid = #{userid}
		union 
		select ao.ordernum, ao.orderid,ao.cardid,ao.buyuserid, ao.selluserid,ao.commentcount,ao.status,ao.ordertype,ao.profitprice,ao.cardprice,
			timestampdiff(SECOND,now(),date_add(ao.buytime, interval 1 hour)) as remaintime,
			DATE_FORMAT(buytime,'%Y-%m-%d %H:%i:%s') as buytime,
			DATE_FORMAT(duetime,'%Y-%m-%d %H:%i:%s') as duetime,
			mc.typename,
			(mc.commentcount - ao.commentcount) remaincount,
			mc.yield
			 from c_t_app_order ao
			left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.buytime  &gt; date_add(now(), interval -1 hour) 	
			and ao.status = 2
			and ao.selluserid = #{userid}
		union 
		select ao.ordernum, ao.orderid,ao.cardid,ao.buyuserid, ao.selluserid,ao.commentcount,ao.status,ao.ordertype,ao.profitprice,ao.cardprice,
			0,
			DATE_FORMAT(ao.buytime,'%Y-%m-%d %H:%i:%s') as buytime,
			DATE_FORMAT(ao.duetime,'%Y-%m-%d %H:%i:%s') as duetime,
			mc.typename,
			(mc.commentcount - ao.commentcount) remaincount,
			mc.yield
			 from c_t_app_order ao
			left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.status = 0
			and ao.selluserid = #{userid}
	</select>
	
	<select id="getExamineInfo" parameterType="map" resultType="map">
		select ao.orderid,mc.cardimg,ao.ordernum, DATE_FORMAT(ao.selltime,'%Y-%m-%d %H:%i:%s') as selltime, ao.profitprice,ao.cardprice,
		timestampdiff(SECOND,now(),date_add(ao.buytime, interval 1 hour)) as remaintime,
		ao.payorder,ce.realname,us.phone, pm.weixinnum
		 from c_t_app_order ao
		left join c_t_app_membercard mc on ao.cardid = mc.cardid
		left join  c_t_app_certification ce on ao.buyuserid = ce.userid 
		left join c_t_app_userinfo us on ce.userid = us.userid
		left join c_t_app_paymentmethod pm on ce.userid = pm.userid
		where ao.orderid= #{orderid}
		and ao.selluserid = #{userid}
	</select>
	
	<update id="examinePast" parameterType="map">
		update c_t_app_order
		set status = 3 
		where orderid = #{orderid}
	</update>
	
	<select id="getUserVipCount" parameterType="map" resultType="int">
		select count(0) from orderid
		<where>
			<if test="status != null and status != ''">and status >= #{status} </if>
			<if test="buyuserid != null and buyuserid != ''">and buyuserid = #{buyuserid} </if>
			<if test="selluserid != null and selluserid != ''">and selluserid = #{selluserid} </if>
		</where>  
	</select>
	
	<update id="updateLevel" parameterType="map">
		update c_t_app_userinfo set levelid = #{levelid} where userid = #{userid}
	</update>
	
	<select id="getElderid" parameterType="map" resultType="map">
		select parentid as grandpaid,userid as parentid from c_t_app_userinfo where userid=(select parentid from c_t_app_userinfo where userid = #{userid})
	</select>
	
	<update id="addParentGrowthValue" parameterType="map">
		update c_t_app_userinfo
		set growthvalue = growthvalue + #{growthvalue}
		where userid = #{userid}
	</update>
	
	<update id="addParentsAndGrandPa" parameterType="map">
		update c_t_app_userinfo
		set sumprofit = sumprofit + #{profitprice}
		where userid = #{userid}
	</update>
	
	<insert id="insertTeamProfit" parameterType="map">
		insert into c_t_app_teamprofit
		 <trim prefix="(" suffix=")" suffixOverrides=",">
	        <if test="userid != null and userid != ''">userid,</if>
	        <if test="parentid != null and parentid != ''">parentid,</if>
	        <if test="parentprofit != null and parentprofit != ''">parentprofit,</if>
	        <if test="grandfatherid != null and grandfatherid != ''">grandfatherid,</if>
	        <if test="grandfatherprofit != null and grandfatherprofit != ''">grandfatherprofit,</if>
	        <if test="createtime != null and createtime != ''">createtime,</if>
	    </trim>
	    <trim prefix="values(" suffix=")" suffixOverrides=",">
	        <if test="userid != null and userid != ''">#{userid},</if>
	        <if test="parentid != null and parentid != ''">#{parentid},</if>
	        <if test="parentprofit != null and parentprofit != ''">#{parentprofit},</if>
	        <if test="grandfatherid != null and grandfatherid != ''">#{grandfatherid},</if>
	        <if test="grandfatherprofit != null and grandfatherprofit != ''">#{grandfatherprofit},</if>
	        <if test="createtime != null and createtime != ''">#{createtime},</if>
	    </trim>
	</insert>
	
	<update id="addMySumassets" parameterType="map">
		update c_t_app_userinfo
		set sumassets = sumassets + #{profitprice}
		where userid = #{userid} 
	</update>
	
	<select id="getMyCardList" parameterType="map" resultType="map">
		select ao.ordernum, ao.orderid,ao.cardid,ao.buyuserid, ao.selluserid,ao.commentcount,ao.status,ao.ordertype,ao.profitprice,ao.cardprice,
			DATE_FORMAT(ao.buytime,'%Y-%m-%d %H:%i:%s') as buytime,
			DATE_FORMAT(ao.duetime,'%Y-%m-%d %H:%i:%s') as duetime,
			mc.typename,
			timestampdiff(day,now(),ao.duetime) as remaindays,
			(mc.commentcount - ao.commentcount) remaincount,
			mc.yield
			from c_t_app_order ao
			left join c_t_app_membercard mc on ao.cardid = mc.cardid
			where ao.status in (3 , 4 )
			and ao.buyuserid = #{userid}
	</select>
	
	<select id="getMemberCardInfo" parameterType="map" resultType="map">
		select ao.cardid,mc.typename,mc.cardimg, mc.introduction, mc.description, ao.ordernum,
			DATE_FORMAT(ao.createtime,'%Y-%m-%d %H:%i:%S') as buytime,
			DATE_FORMAT(ao.duetime,'%Y-%m-%d %H:%i:%S') as duetime,
			ao.commentcount as alreadycount,
			mc.commentstartdays，
			mc.commentcount,
			ao.cardprice
		from c_t_app_order  ao
		left join c_t_app_membercard mc on ao.cardid = mc.cardid
		left join c_t_app_userinfo us on ao.buyuserid = us.userid
		left join c_t_app_paymentmethod pay on ao.selluserid = pay.userid
			where ao.status = 3
			and ao.orderid = #{orderid}
	</select> 
	
	<select id="getMovieByCardId" parameterType="map" resultType="map">
		select movieid, cardid, coverimg, title, description,httputl,DATE_FORMAT(createtime,'%Y-%m-%d %H:%i:%s') as createtime 
		from c_t_app_membermovie 
		where cardid = #{cardid}
		and status = 1
	</select>
	
	<select id="getSellCardInfo" parameterType="map" resultType="map">
		select ao.cardid,mc.typename,mc.cardimg, mc.introduction, mc.description, ao.ordernum,
			DATE_FORMAT(ao.createtime,'%Y-%m-%d %H:%i:%S') as buytime,
			DATE_FORMAT(ao.duetime,'%Y-%m-%d %H:%i:%S') as duetime,
			ao.commentcount as alreadycount,
			mc.commentstartdays,
			mc.commentcount,
			(ao.cardprice + ao.profitprice) as maxprice
		from c_t_app_order  ao
		left join c_t_app_membercard mc on ao.cardid = mc.cardid
		left join c_t_app_userinfo us on ao.buyuserid = us.userid
		left join c_t_app_paymentmethod pay on ao.selluserid = pay.userid
		where (ao.status = 4 or duetime > now())
		and ao.orderid = #{orderid}
	</select>
	
	<update id="updateCardOrderStatus" parameterType="map">
		update c_t_app_order set status = #{status} where orderid = #{orderid}
	</update>
	
	<select id="getMemberCardByPrice" parameterType="map" resultType="map">
		select cardid,typename,type,cardicon,cardimg,xgocoin,minprice,maxprice,starttime,endtime,commentstartdays,watchdays,commentcount,yield,introduction,description,
		STR_TO_DATE(CONCAT(DATE_FORMAT(date_add(now(), interval 1 day),'%Y-%m-%d '),starttime),'%Y-%m-%d %H:%i') as selltime
		from c_t_app_membercard
		where status = 1
		and maxprice &gt;= #{cardprice}
		and minprice &lt;= #{cardprice}
		order by commentstartdays asc
		limit 1
	</select>
	
	<insert id="insertOrder" parameterType="map">
		insert into c_t_app_order
		 <trim prefix="(" suffix=")" suffixOverrides=",">
	        <if test="ordernum != null and ordernum != ''">ordernum,</if>
	        <if test="cardid != null and cardid != ''">cardid,</if>
	        <if test="cardprice != null and cardprice != ''">cardprice,</if>
	        <if test="selluserid != null and selluserid != ''">selluserid,</if>
	        <if test="ordertype != null and ordertype != ''">ordertype,</if>
	        <if test="selltime != null and selltime != ''">selltime,</if>
	        <if test="createtime != null and createtime != ''">createtime,</if>
	    </trim>
	    <trim prefix="values(" suffix=")" suffixOverrides=",">
	        <if test="ordernum != null and ordernum != ''">#{ordernum},</if>
	        <if test="cardid != null and cardid != ''">#{cardid},</if>
	        <if test="cardprice != null and cardprice != ''">#{cardprice},</if>
	        <if test="selluserid != null and selluserid != ''">#{selluserid},</if>
	        <if test="ordertype != null and ordertype != ''">#{ordertype},</if>
	        <if test="selltime != null and selltime != ''">#{selltime},</if>
	        <if test="createtime != null and createtime != ''">#{createtime},</if>
	    </trim>
	</insert>
	
	<update id="addUserInfoOverProfit" parameterType="map">
		update c_t_app_userinfo 
		set sumprofit = sumprofit + #{overprofit}
		where userid = #{userid}
	</update>
</mapper>